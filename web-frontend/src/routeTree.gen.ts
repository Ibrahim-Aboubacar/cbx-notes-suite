/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AppSharedWithMeRouteImport } from './routes/_app/shared-with-me'
import { Route as AppExploreRouteImport } from './routes/_app/explore'
import { Route as AppNotesIndexRouteImport } from './routes/_app/notes/index'
import { Route as AppNotesPreviewRouteImport } from './routes/_app/notes/preview'
import { Route as AppNotesChar123idChar125RouteRouteImport } from './routes/_app/notes/{$id}/route'
import { Route as AppNotesChar123idChar125IndexRouteImport } from './routes/_app/notes/{$id}/index'
import { Route as AppNotesNewIndexRouteImport } from './routes/_app/notes/new/index'
import { Route as AppNotesChar123idChar125EditRouteImport } from './routes/_app/notes/{$id}/edit'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AppSharedWithMeRoute = AppSharedWithMeRouteImport.update({
  id: '/shared-with-me',
  path: '/shared-with-me',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppExploreRoute = AppExploreRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppNotesIndexRoute = AppNotesIndexRouteImport.update({
  id: '/notes/',
  path: '/notes/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppNotesPreviewRoute = AppNotesPreviewRouteImport.update({
  id: '/notes/preview',
  path: '/notes/preview',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppNotesChar123idChar125RouteRoute =
  AppNotesChar123idChar125RouteRouteImport.update({
    id: '/notes/{$id}',
    path: '/notes/{$id}',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppNotesChar123idChar125IndexRoute =
  AppNotesChar123idChar125IndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppNotesChar123idChar125RouteRoute,
  } as any)
const AppNotesNewIndexRoute = AppNotesNewIndexRouteImport.update({
  id: '/notes/new/',
  path: '/notes/new/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppNotesChar123idChar125EditRoute =
  AppNotesChar123idChar125EditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => AppNotesChar123idChar125RouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/explore': typeof AppExploreRoute
  '/shared-with-me': typeof AppSharedWithMeRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/notes/{$id}': typeof AppNotesChar123idChar125RouteRouteWithChildren
  '/notes/preview': typeof AppNotesPreviewRoute
  '/notes': typeof AppNotesIndexRoute
  '/notes/{$id}/edit': typeof AppNotesChar123idChar125EditRoute
  '/notes/new': typeof AppNotesNewIndexRoute
  '/notes/{$id}/': typeof AppNotesChar123idChar125IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/explore': typeof AppExploreRoute
  '/shared-with-me': typeof AppSharedWithMeRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/notes/preview': typeof AppNotesPreviewRoute
  '/notes': typeof AppNotesIndexRoute
  '/notes/{$id}/edit': typeof AppNotesChar123idChar125EditRoute
  '/notes/new': typeof AppNotesNewIndexRoute
  '/notes/{$id}': typeof AppNotesChar123idChar125IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_app/explore': typeof AppExploreRoute
  '/_app/shared-with-me': typeof AppSharedWithMeRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_app/notes/{$id}': typeof AppNotesChar123idChar125RouteRouteWithChildren
  '/_app/notes/preview': typeof AppNotesPreviewRoute
  '/_app/notes/': typeof AppNotesIndexRoute
  '/_app/notes/{$id}/edit': typeof AppNotesChar123idChar125EditRoute
  '/_app/notes/new/': typeof AppNotesNewIndexRoute
  '/_app/notes/{$id}/': typeof AppNotesChar123idChar125IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/explore'
    | '/shared-with-me'
    | '/login'
    | '/register'
    | '/notes/{$id}'
    | '/notes/preview'
    | '/notes'
    | '/notes/{$id}/edit'
    | '/notes/new'
    | '/notes/{$id}/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/explore'
    | '/shared-with-me'
    | '/login'
    | '/register'
    | '/notes/preview'
    | '/notes'
    | '/notes/{$id}/edit'
    | '/notes/new'
    | '/notes/{$id}'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/explore'
    | '/_app/shared-with-me'
    | '/_auth/login'
    | '/_auth/register'
    | '/_app/notes/{$id}'
    | '/_app/notes/preview'
    | '/_app/notes/'
    | '/_app/notes/{$id}/edit'
    | '/_app/notes/new/'
    | '/_app/notes/{$id}/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_app/shared-with-me': {
      id: '/_app/shared-with-me'
      path: '/shared-with-me'
      fullPath: '/shared-with-me'
      preLoaderRoute: typeof AppSharedWithMeRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/explore': {
      id: '/_app/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof AppExploreRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/notes/': {
      id: '/_app/notes/'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof AppNotesIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/notes/preview': {
      id: '/_app/notes/preview'
      path: '/notes/preview'
      fullPath: '/notes/preview'
      preLoaderRoute: typeof AppNotesPreviewRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/notes/{$id}': {
      id: '/_app/notes/{$id}'
      path: '/notes/{$id}'
      fullPath: '/notes/{$id}'
      preLoaderRoute: typeof AppNotesChar123idChar125RouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/notes/{$id}/': {
      id: '/_app/notes/{$id}/'
      path: '/'
      fullPath: '/notes/{$id}/'
      preLoaderRoute: typeof AppNotesChar123idChar125IndexRouteImport
      parentRoute: typeof AppNotesChar123idChar125RouteRoute
    }
    '/_app/notes/new/': {
      id: '/_app/notes/new/'
      path: '/notes/new'
      fullPath: '/notes/new'
      preLoaderRoute: typeof AppNotesNewIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/notes/{$id}/edit': {
      id: '/_app/notes/{$id}/edit'
      path: '/edit'
      fullPath: '/notes/{$id}/edit'
      preLoaderRoute: typeof AppNotesChar123idChar125EditRouteImport
      parentRoute: typeof AppNotesChar123idChar125RouteRoute
    }
  }
}

interface AppNotesChar123idChar125RouteRouteChildren {
  AppNotesChar123idChar125EditRoute: typeof AppNotesChar123idChar125EditRoute
  AppNotesChar123idChar125IndexRoute: typeof AppNotesChar123idChar125IndexRoute
}

const AppNotesChar123idChar125RouteRouteChildren: AppNotesChar123idChar125RouteRouteChildren =
  {
    AppNotesChar123idChar125EditRoute: AppNotesChar123idChar125EditRoute,
    AppNotesChar123idChar125IndexRoute: AppNotesChar123idChar125IndexRoute,
  }

const AppNotesChar123idChar125RouteRouteWithChildren =
  AppNotesChar123idChar125RouteRoute._addFileChildren(
    AppNotesChar123idChar125RouteRouteChildren,
  )

interface AppRouteRouteChildren {
  AppExploreRoute: typeof AppExploreRoute
  AppSharedWithMeRoute: typeof AppSharedWithMeRoute
  AppNotesChar123idChar125RouteRoute: typeof AppNotesChar123idChar125RouteRouteWithChildren
  AppNotesPreviewRoute: typeof AppNotesPreviewRoute
  AppNotesIndexRoute: typeof AppNotesIndexRoute
  AppNotesNewIndexRoute: typeof AppNotesNewIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppExploreRoute: AppExploreRoute,
  AppSharedWithMeRoute: AppSharedWithMeRoute,
  AppNotesChar123idChar125RouteRoute:
    AppNotesChar123idChar125RouteRouteWithChildren,
  AppNotesPreviewRoute: AppNotesPreviewRoute,
  AppNotesIndexRoute: AppNotesIndexRoute,
  AppNotesNewIndexRoute: AppNotesNewIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
